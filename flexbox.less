// ----------------------------------------------------------------------------------
// CSS Flexible Box Layout Module
// W3C Candidate Recommendation, 18 September 2012
// http://www.w3.org/TR/css3-flexbox
// Author: Rodrigo Fern√°ndez-Romero (https://github.com/FdezRomero/HTML5-LESS-Mixins)
// ----------------------------------------------------------------------------------
 
// Flexbox display
// Values: [flex] | inline-flex
.flex-container(@display: flex) {
	display: ~"-webkit-@{display}";
    display: -webkit-box;
	display: ~"-moz-@{display}";
	display: ~"-ms-@{display}";
	display: @display;
    .align-items: center;
}
 
// The 'flex' shorthand
// Applies to: flex items
// Values: <positive-number> | [initial] | auto | none
.flex(@columns: initial) {
  -webkit-box-flex: @columns;
      -webkit-flex: @columns;
         -moz-flex: @columns;
          -ms-flex: @columns;
              flex: @columns;
}
 
// Flex Flow Direction
// Applies to: flex containers
// Values: [row] | row-reverse | column | column-reverse
.flex-direction(@direction: row) {
  -webkit-flex-direction: @direction;
     -moz-flex-direction: @direction;
      -ms-flex-direction: @direction;
          flex-direction: @direction;
}
 
// Flex Line Wrapping
// Applies to: flex containers
// Values: [nowrap] | wrap | wrap-reverse
.flex-wrap(@wrap: nowrap) {
  -webkit-flex-wrap: @wrap;
     -moz-flex-wrap: @wrap;
      -ms-flex-wrap: @wrap;
          flex-wrap: @wrap;
}
 
// Flex Direction and Wrap
// Applies to: flex containers
// Values: flex-direction | flex-wrap
.flex-flow(@flow) {
  -webkit-flex-flow: @flow;
     -moz-flex-flow: @flow;
      -ms-flex-flow: @flow;
          flex-flow: @flow;
}
 
// Display Order
// Applies to: flex items
// Values: <integer>
.flex-order(@order: 0) {
  -webkit-order: @order;
     -moz-order: @order;
      -ms-order: @order;
          order: @order;
}
 
// Flex grow factor
// Applies to: flex items
// Values: <number>
.flex-grow(@grow: 0) {
  -webkit-flex-grow: @grow;
     -moz-flex-grow: @grow;
      -ms-flex-grow: @grow;
          flex-grow: @grow;
}
 
// Flex shrink
// Applies to: flex itemsink factor
// Values: <number> 
.flex-shrink(@shrink: 1) {
  -webkit-flex-shrink: @shrink;
     -moz-flex-shrink: @shrink;
      -ms-flex-shrink: @shrink;
          flex-shrink: @shrink;
}
 
// Flex basis
// Applies to: flex items
// Values: <width> 
.flex-basis(@width: auto) {
  -webkit-flex-basis: @width;
     -moz-flex-basis: @width;
      -ms-flex-basis: @width;
          flex-basis: @width;
}
 
// Axis Alignment
// Applies to: flex containers
// Values: [flex-start] | flex-end | center | space-between | space-around 
.justify-content(@justify: flex-start) {
  -webkit-justify-content: @justify;
     -moz-justify-content: @justify;
      -ms-justify-content: @justify;
          justify-content: @justify;
}
 
// Packing Flex Lines
// Applies to: multi-line flex containers
// Values: flex-start | flex-end | center | space-between | space-around | [stretch] 
.align-content(@align: stretch) {
  -webkit-align-content: @align;
     -moz-align-content: @align;
      -ms-align-content: @align;
          align-content: @align;
}
 
// Cross-axis Alignment
// Applies to: flex containers
// Values: flex-start | flex-end | center | baseline | [stretch]
.align-items(@align: stretch) {
  -webkit-align-items: @align;
    -webkit-box-align: @align;
     -moz-align-items: @align;
      -ms-align-items: @align;
          align-items: @align;
}
 
// Cross-axis Alignment
// Applies to: flex items
// Values: [auto] | flex-start | flex-end | center | baseline | stretch
.align-self(@align: auto) {
  -webkit-align-self: @align;
     -moz-align-self: @align;
      -ms-align-self: @align;
          align-self: @align;
}